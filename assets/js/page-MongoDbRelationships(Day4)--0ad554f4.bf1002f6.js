(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{499:function(t,a,e){"use strict";e.r(a);var r=e(2),o=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"mongodb-relationships-day-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-relationships-day-4"}},[t._v("#")]),t._v(" MongoDb Relationships (Day 4)")]),t._v(" "),e("h2",{attrs:{id:"what-is-a-virtual-property"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-virtual-property"}},[t._v("#")]),t._v(" What is a virtual property?")]),t._v(" "),e("p",[t._v("Virtual properties are additional fields for a given model. Their values can be set manually or automatically with defined functionality. A common virtual property is the full name of a person, composed of user's first and last name. Virtual properties don't persist through the database. They only exist logically and are not written to the document's collection.")]),t._v(" "),e("h2",{attrs:{id:"when-might-you-use-a-virtual-property"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#when-might-you-use-a-virtual-property"}},[t._v("#")]),t._v(" When might you use a virtual property?")]),t._v(" "),e("p",[t._v("You might use a virtual property when you want to fetch certain data without creating an actual object. You can mimic an objects property.")]),t._v(" "),e("h2",{attrs:{id:"how-do-you-search-by-a-virtual-properties-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-do-you-search-by-a-virtual-properties-value"}},[t._v("#")]),t._v(" How do you search by a virtual properties value?")]),t._v(" "),e("h2",{attrs:{id:"afternoon-challenge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#afternoon-challenge"}},[t._v("#")]),t._v(" Afternoon Challenge")]),t._v(" "),e("p",[t._v("Hackathon Prep")])])}),[],!1,null,null,null);a.default=o.exports}}]);