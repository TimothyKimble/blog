(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{518:function(e,t,a){"use strict";a.r(t);var s=a(2),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"scrum-for-small-teams-day-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scrum-for-small-teams-day-3"}},[e._v("#")]),e._v(" Scrum for Small teams (Day 3)")]),e._v(" "),a("h2",{attrs:{id:"how-are-some-ways-scrum-for-a-small-team-would-differ-from-scrum-with-a-large-team"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-are-some-ways-scrum-for-a-small-team-would-differ-from-scrum-with-a-large-team"}},[e._v("#")]),e._v(" How are some ways Scrum for a small team would differ from Scrum with a large team?")]),e._v(" "),a("p",[e._v("Smaller Scrum teams might have longer sprint times so developers can have the opportunity to finish their projects. Another thing that might change is the amount of people working on the same components of a project might be smaller which leads to longer sprint times, and the type of work each person recieves.")]),e._v(" "),a("h2",{attrs:{id:"why-does-scrum-prescribe-to-only-run-1-sprint-at-a-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-does-scrum-prescribe-to-only-run-1-sprint-at-a-time"}},[e._v("#")]),e._v(" Why does Scrum prescribe to only run 1 sprint at a time.")]),e._v(" "),a("p",[e._v("Running only one sprint at a time is very useful because it reduces the ammount of stress, and usually improves the quality of a product. If you want to do a project cheap and fast, it's going to cost more, and be worse. So by only having one sprint, it helps to work on aspects of an application individually, and leads to a better product for the client.")]),e._v(" "),a("h2",{attrs:{id:"what-is-the-unattainable-triangle-and-what-purpose-does-it-have-in-scrum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-unattainable-triangle-and-what-purpose-does-it-have-in-scrum"}},[e._v("#")]),e._v(" What is the unattainable triangle and what purpose does it have in Scrum?")]),e._v(" "),a("p",[e._v("The unattainable triangle is a paradox that is the set of tradeoffs between the speed of development and the quality of the software delivered. The three tradeoffs of the unattainable triangle paradox are first, good service cheap won't be fast, second, good service fast won't be cheap, and third, fast service cheap won't be good. Understanding the tradeoffs on each side of the unattainable triangle allows a project team as a whole to set and accept realistic expectations.")]),e._v(" "),a("h2",{attrs:{id:"afternoon-challenge-capstones"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#afternoon-challenge-capstones"}},[e._v("#")]),e._v(" Afternoon Challenge (Capstones)")]),e._v(" "),a("p",[e._v("https://github.com/hollidavis/Tally")])])}),[],!1,null,null,null);t.default=r.exports}}]);